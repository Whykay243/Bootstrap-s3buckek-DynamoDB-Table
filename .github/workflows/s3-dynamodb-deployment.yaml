name: Terraform Backend Bootstrap

on:
  push:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  bootstrap:
    name: Bootstrap S3 and DynamoDB
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Bootstrap-infrastructure

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::293926504711:role/Githubaction-aws-assumerole
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Debug backend.tfvars presence
        run: |
          echo "Files in working directory:"
          ls -la
          echo "Contents of backend.tfvars:"
          cat backend.tfvars

      - name: Check and import existing DynamoDB table if present
        run: |
          TABLE_NAME=$(awk -F' *= *' '/dynamodb_table_name/ {gsub(/"/, "", $2); print $2}' backend.tfvars)
          if aws dynamodb describe-table --table-name "$TABLE_NAME" >/dev/null 2>&1; then
            echo "DynamoDB table exists. Importing..."
            terraform import -var-file="backend.tfvars" aws_dynamodb_table.table "$TABLE_NAME"
          else
            echo "DynamoDB table does not exist. Will be created by Terraform."
          fi

      - name: Check and import existing S3 bucket if present
        run: |
          BUCKET_NAME=$(awk -F' *= *' '/bucket_name/ {gsub(/"/, "", $2); print $2}' backend.tfvars)
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "S3 bucket exists. Importing..."
            terraform import -var-file="backend.tfvars" aws_s3_bucket.bucket "$BUCKET_NAME"
          else
            echo "S3 bucket does not exist. Will be created by Terraform."
          fi

      - name: Terraform Plan
        run: terraform plan -var-file="backend.tfvars"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file="backend.tfvars"

